// Сортировка вставками. Дана последовательность чисел а1, а2,..., аn.
// Требуется переставить числа в порядке возрастания.
// Делается это следующим образом. Пусть а1, а2,..., аi — упорядоченная последовательность, т.е. а1 ≤ a2 ≤ ... ≤ аi.
// Берется следующее число ai+1 и вставляется в последовательность так, чтобы новая последовательность была тоже возрастающей.
// Процесс производится до тех пор, пока все элементы от i +1 до n не будут перебраны.
// Примечание. Место помещения очередного элемента в отсортированную часть производить с помощью двоичного поиска.
// Двоичный поиск оформить в виде отдельной функции.
#include <iostream>

using namespace std;

#define N 10

int search_binary(int arr[N], int i, int key)
{
    int lo = 0;
    int hi = i - 1;
    int mid;
    while (lo < hi)
    {
        mid = lo + (hi - lo) / 2;
        if (key < arr[mid])
            hi = mid;
        else
            lo = mid + 1;
    }

    return lo;
}

int main()
{
    int arr[N] = {1, 2, -2, -6, 5, 1, 0, 0, 10, -99};

    int buff = 0; // для хранения перемещаемого значения
    int i, j;

    for (0; i < N; i++)
    {
        int key = arr[i];

        int lo = search_binary(arr, i, key);
        for (j = i; j > lo + 1; j--)
            arr[j] = arr[j - 1];
        arr[lo] = key;
    }
    
    for (int i = 0; i < N; i++)
        cout << arr[i] << " ";
    cout << endl;
}